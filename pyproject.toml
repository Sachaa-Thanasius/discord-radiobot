[project]
name = "discord-radiobot"
version = "2024.06.22"
description = "A small Discord bot for setting up radios."
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "Sachaa-Thanasius", email = "111999343+Sachaa-Thanasius@users.noreply.github.com" },
]

[project.urls]
Homepage = "https://github.com/SutaHelmIndustries/discord-radiobot"
Issues = "https://github.com/SutaHelmIndustries/discord-radiobot/issues"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "RUF",
]
ignore = [
    "S101",    # Allow use of assert for typing reasons.
    "PLR2004", # Magic value comparison.
    "SIM105",  # Suppressable exception. contextlib.suppress is a stylistic choice with overhead.
    "ANN101",  # Type of Self for self is usually implicit.
    "ANN102",  # Type of type[Self] for cls is usually implicit.
    "ANN204",  # Special method return types are usually implicit or known by type checkers.
    "ANN401",  # Any is necessary sometimes.
    "PT001",   # pytest recommends against empty parentheses on pytest.fixture.
    "UP038",   # isinstance performs better with tuples than unions.
    # == Recommended ignores by ruff when using ruff format.
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "COM812",
    "COM819",
    # "E501",
    "ISC001",
    "ISC002",
]
unfixable = [
    "ERA", # Don't want erroneous deletion of comments.
]

[tool.ruff.lint.isort]
lines-after-imports = 2
combine-as-imports = true

[tool.pyright]
include = ["radiobot.py"]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportPropertyTypeMismatch = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
